<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--mac快速添加注释：control+shift+/-->

    <!--
    applicationContext配置文件项目启动的时候就要加载了.

    所以我们要把数据源，事务，切面和一些配置文件引入进来，主要结构有：

    1.引入jdbc.properties配置文件位置

    2.数据源dataSource

    3.引入mybatis-config.xml文件位置

    4.引入mapper.xml文件位置

    5.事务管理器

    6.切面配置

    -->

    <!-- 引入外部的属性资源文件,把我们刚刚配置的jdbc配置文件引入进来 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 扫包，只需要扫service的即可，Controller的包springMVC会扫描，mapper层的，下面类会帮我们扫描 -->
    <context:component-scan base-package="com.cuteximi.service"/>
    <!-- 使用专门扫描mapper接口的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cuteximi.mapper"/>
    </bean>

    <!-- 配置数据源 ，这里了用的是阿里巴巴的数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--sqlSession工厂，我们对数据库增删改查就靠他-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入配置的数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 注入mybatis-config配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- 注入mapper.xml文件位置，
        这里的/**/*.xml写法，只要是/mybatis/mapper下的都可以注入进来，哪怕里面又加了几个文件夹-->
        <property name="MapperLocations" value="classpath:mapper/*.xml"></property>

    </bean>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置事务属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--配置事务的属性，如果方法名是find开头，只允许查询业务，不允许增删改业务，
            这样可以防错，如果写了删除或者增加功能，则会抛出异常，提醒开发人员-->
            <tx:method name="find*" read-only="true"/>
            <!--其他方法做增删改功能-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置切面
    配置了事务后，我们肯定要告诉spring,哪些方法需要加上事务 -->
    <aop:config>
        <!--配置切点-->
        <aop:pointcut expression="execution(* com.cuteximi.service.impl.*.*(..))" id="pointcut"/>
        <!--将advice注入程序中pointcut位置的代码-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
</beans>

